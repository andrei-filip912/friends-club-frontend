import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import PostInput from "@/components/Post/PostInput";
import PostList from "@/components/Post/PostList";
import { getAccessToken, getSession } from "@auth0/nextjs-auth0";
import { GetServerSideProps, GetServerSidePropsContext } from "next";
import axios from "axios";
import { Post } from "@/interfaces/post.interface";
import buildClient from "./api/build-client";
import { useUser } from "@auth0/nextjs-auth0/client";
import Loading from "@/components/Loading";
import { useRouter } from "next/router";
import { useEffect } from "react";

const inter = Inter({ subsets: ["latin"] });

interface HomeProps {
  posts: Post[];
  accessToken?: string;
}

export const Home: React.FC<HomeProps> = ({ posts, accessToken }) => {
  const { user, error, isLoading } = useUser();
  const router = useRouter();

  useEffect(() => {
    if (error || isLoading) {
      return;
    }

    if (!user) {
      router.push("/api/auth/login");
    }
  }, [user, error, isLoading]);

  if (isLoading) return <Loading />;
  if (error) return <div>{error.message}</div>;

  return (
    user && (
      <>
        <Head>
          <title>Friends Club</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <PostInput accessToken={accessToken} />
          <PostList posts={posts} accessToken={accessToken} />
        </main>
      </>
    )
  );
};

export const getServerSideProps: GetServerSideProps<HomeProps> = async (
  ctx: GetServerSidePropsContext
) => {
  const session = await getSession(ctx.req, ctx.res);

  if (!session?.user) {
    return {
      props: {
        posts: [],
        accessToken: "",
      },
    };
  }

  const { accessToken } = await getAccessToken(ctx.req, ctx.res);
  const client = buildClient(ctx);
  const { data: posts } = await client.get("/api/post", {
    headers: { Authorization: `Bearer ${accessToken}` },
  });

  return {
    props: {
      posts: posts,
      accessToken: accessToken,
    },
  };
};

export default Home;
